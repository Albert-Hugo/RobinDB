// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RemoteCmd.proto

package com.ido.robin.rpc.proto;

public final class RemoteCmd {
  private RemoteCmd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ido.robin.rpc.Cmd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
     * @return Whether the basicCmd field is set.
     */
    boolean hasBasicCmd();

    /**
     * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
     *
     * @return The basicCmd.
     */
    BasicCmd getBasicCmd();

    /**
     * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
     */
    BasicCmdOrBuilder getBasicCmdOrBuilder();

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
     *
     * @return Whether the remoteCopyRequest field is set.
     */
    boolean hasRemoteCopyRequest();

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
     *
     * @return The remoteCopyRequest.
     */
    RemoteCopyRequest getRemoteCopyRequest();

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
     */
    RemoteCopyRequestOrBuilder getRemoteCopyRequestOrBuilder();

    public Cmd.OneCmdCase getOneCmdCase();
  }

  /**
   * Protobuf type {@code com.ido.robin.rpc.Cmd}
   */
  public static final class Cmd extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.ido.robin.rpc.Cmd)
          CmdOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use Cmd.newBuilder() to construct.
    private Cmd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Cmd() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
            UnusedPrivateParameter unused) {
      return new Cmd();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }

    private Cmd(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              BasicCmd.Builder subBuilder = null;
              if (oneCmdCase_ == 1) {
                subBuilder = ((BasicCmd) oneCmd_).toBuilder();
              }
              oneCmd_ =
                      input.readMessage(BasicCmd.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((BasicCmd) oneCmd_);
                oneCmd_ = subBuilder.buildPartial();
              }
              oneCmdCase_ = 1;
              break;
            }
            case 18: {
              RemoteCopyRequest.Builder subBuilder = null;
              if (oneCmdCase_ == 2) {
                subBuilder = ((RemoteCopyRequest) oneCmd_).toBuilder();
              }
              oneCmd_ =
                      input.readMessage(RemoteCopyRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RemoteCopyRequest) oneCmd_);
                oneCmd_ = subBuilder.buildPartial();
              }
              oneCmdCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return RemoteCmd.internal_static_com_ido_robin_rpc_Cmd_descriptor;
    }

    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return RemoteCmd.internal_static_com_ido_robin_rpc_Cmd_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      Cmd.class, Builder.class);
    }

    private int oneCmdCase_ = 0;
    private Object oneCmd_;

    public enum OneCmdCase
            implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      BASICCMD(1),
      REMOTECOPYREQUEST(2),
      ONECMD_NOT_SET(0);
      private final int value;

      private OneCmdCase(int value) {
        this.value = value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static OneCmdCase valueOf(int value) {
        return forNumber(value);
      }

      public static OneCmdCase forNumber(int value) {
        switch (value) {
          case 1:
            return BASICCMD;
          case 2:
            return REMOTECOPYREQUEST;
          case 0:
            return ONECMD_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    }

    ;

    public OneCmdCase
    getOneCmdCase() {
      return OneCmdCase.forNumber(
              oneCmdCase_);
    }

    public static final int BASICCMD_FIELD_NUMBER = 1;

    /**
     * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
     *
     * @return Whether the basicCmd field is set.
     */
    @Override
    public boolean hasBasicCmd() {
      return oneCmdCase_ == 1;
    }

    /**
     * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
     *
     * @return The basicCmd.
     */
    @Override
    public BasicCmd getBasicCmd() {
      if (oneCmdCase_ == 1) {
        return (BasicCmd) oneCmd_;
      }
      return BasicCmd.getDefaultInstance();
    }

    /**
     * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
     */
    @Override
    public BasicCmdOrBuilder getBasicCmdOrBuilder() {
      if (oneCmdCase_ == 1) {
        return (BasicCmd) oneCmd_;
      }
      return BasicCmd.getDefaultInstance();
    }

    public static final int REMOTECOPYREQUEST_FIELD_NUMBER = 2;

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
     *
     * @return Whether the remoteCopyRequest field is set.
     */
    @Override
    public boolean hasRemoteCopyRequest() {
      return oneCmdCase_ == 2;
    }

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
     *
     * @return The remoteCopyRequest.
     */
    @Override
    public RemoteCopyRequest getRemoteCopyRequest() {
      if (oneCmdCase_ == 2) {
        return (RemoteCopyRequest) oneCmd_;
      }
      return RemoteCopyRequest.getDefaultInstance();
    }

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
     */
    @Override
    public RemoteCopyRequestOrBuilder getRemoteCopyRequestOrBuilder() {
      if (oneCmdCase_ == 2) {
        return (RemoteCopyRequest) oneCmd_;
      }
      return RemoteCopyRequest.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (oneCmdCase_ == 1) {
        output.writeMessage(1, (BasicCmd) oneCmd_);
      }
      if (oneCmdCase_ == 2) {
        output.writeMessage(2, (RemoteCopyRequest) oneCmd_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (oneCmdCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, (BasicCmd) oneCmd_);
      }
      if (oneCmdCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, (RemoteCopyRequest) oneCmd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof Cmd)) {
        return super.equals(obj);
      }
      Cmd other = (Cmd) obj;

      if (!getOneCmdCase().equals(other.getOneCmdCase())) return false;
      switch (oneCmdCase_) {
        case 1:
          if (!getBasicCmd()
                  .equals(other.getBasicCmd())) return false;
          break;
        case 2:
          if (!getRemoteCopyRequest()
                  .equals(other.getRemoteCopyRequest())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (oneCmdCase_) {
        case 1:
          hash = (37 * hash) + BASICCMD_FIELD_NUMBER;
          hash = (53 * hash) + getBasicCmd().hashCode();
          break;
        case 2:
          hash = (37 * hash) + REMOTECOPYREQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteCopyRequest().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Cmd parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static Cmd parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Cmd parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static Cmd parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Cmd parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static Cmd parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Cmd parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static Cmd parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Cmd parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static Cmd parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static Cmd parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static Cmd parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(Cmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code com.ido.robin.rpc.Cmd}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.ido.robin.rpc.Cmd)
            CmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_Cmd_descriptor;
      }

      @Override
      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_Cmd_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        Cmd.class, Builder.class);
      }

      // Construct using com.ido.robin.rpc.proto.RemoteCmd.Cmd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      @Override
      public Builder clear() {
        super.clear();
        oneCmdCase_ = 0;
        oneCmd_ = null;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_Cmd_descriptor;
      }

      @Override
      public Cmd getDefaultInstanceForType() {
        return Cmd.getDefaultInstance();
      }

      @Override
      public Cmd build() {
        Cmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Cmd buildPartial() {
        Cmd result = new Cmd(this);
        if (oneCmdCase_ == 1) {
          if (basicCmdBuilder_ == null) {
            result.oneCmd_ = oneCmd_;
          } else {
            result.oneCmd_ = basicCmdBuilder_.build();
          }
        }
        if (oneCmdCase_ == 2) {
          if (remoteCopyRequestBuilder_ == null) {
            result.oneCmd_ = oneCmd_;
          } else {
            result.oneCmd_ = remoteCopyRequestBuilder_.build();
          }
        }
        result.oneCmdCase_ = oneCmdCase_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }

      @Override
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return super.setField(field, value);
      }

      @Override
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @Override
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @Override
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @Override
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return super.addRepeatedField(field, value);
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Cmd) {
          return mergeFrom((Cmd) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Cmd other) {
        if (other == Cmd.getDefaultInstance()) return this;
        switch (other.getOneCmdCase()) {
          case BASICCMD: {
            mergeBasicCmd(other.getBasicCmd());
            break;
          }
          case REMOTECOPYREQUEST: {
            mergeRemoteCopyRequest(other.getRemoteCopyRequest());
            break;
          }
          case ONECMD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        Cmd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Cmd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int oneCmdCase_ = 0;
      private Object oneCmd_;

      public OneCmdCase
      getOneCmdCase() {
        return OneCmdCase.forNumber(
                oneCmdCase_);
      }

      public Builder clearOneCmd() {
        oneCmdCase_ = 0;
        oneCmd_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
              BasicCmd, BasicCmd.Builder, BasicCmdOrBuilder> basicCmdBuilder_;

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       *
       * @return Whether the basicCmd field is set.
       */
      @Override
      public boolean hasBasicCmd() {
        return oneCmdCase_ == 1;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       *
       * @return The basicCmd.
       */
      @Override
      public BasicCmd getBasicCmd() {
        if (basicCmdBuilder_ == null) {
          if (oneCmdCase_ == 1) {
            return (BasicCmd) oneCmd_;
          }
          return BasicCmd.getDefaultInstance();
        } else {
          if (oneCmdCase_ == 1) {
            return basicCmdBuilder_.getMessage();
          }
          return BasicCmd.getDefaultInstance();
        }
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       */
      public Builder setBasicCmd(BasicCmd value) {
        if (basicCmdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneCmd_ = value;
          onChanged();
        } else {
          basicCmdBuilder_.setMessage(value);
        }
        oneCmdCase_ = 1;
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       */
      public Builder setBasicCmd(
              BasicCmd.Builder builderForValue) {
        if (basicCmdBuilder_ == null) {
          oneCmd_ = builderForValue.build();
          onChanged();
        } else {
          basicCmdBuilder_.setMessage(builderForValue.build());
        }
        oneCmdCase_ = 1;
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       */
      public Builder mergeBasicCmd(BasicCmd value) {
        if (basicCmdBuilder_ == null) {
          if (oneCmdCase_ == 1 &&
                  oneCmd_ != BasicCmd.getDefaultInstance()) {
            oneCmd_ = BasicCmd.newBuilder((BasicCmd) oneCmd_)
                    .mergeFrom(value).buildPartial();
          } else {
            oneCmd_ = value;
          }
          onChanged();
        } else {
          if (oneCmdCase_ == 1) {
            basicCmdBuilder_.mergeFrom(value);
          }
          basicCmdBuilder_.setMessage(value);
        }
        oneCmdCase_ = 1;
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       */
      public Builder clearBasicCmd() {
        if (basicCmdBuilder_ == null) {
          if (oneCmdCase_ == 1) {
            oneCmdCase_ = 0;
            oneCmd_ = null;
            onChanged();
          }
        } else {
          if (oneCmdCase_ == 1) {
            oneCmdCase_ = 0;
            oneCmd_ = null;
          }
          basicCmdBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       */
      public BasicCmd.Builder getBasicCmdBuilder() {
        return getBasicCmdFieldBuilder().getBuilder();
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       */
      @Override
      public BasicCmdOrBuilder getBasicCmdOrBuilder() {
        if ((oneCmdCase_ == 1) && (basicCmdBuilder_ != null)) {
          return basicCmdBuilder_.getMessageOrBuilder();
        } else {
          if (oneCmdCase_ == 1) {
            return (BasicCmd) oneCmd_;
          }
          return BasicCmd.getDefaultInstance();
        }
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd basicCmd = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              BasicCmd, BasicCmd.Builder, BasicCmdOrBuilder>
      getBasicCmdFieldBuilder() {
        if (basicCmdBuilder_ == null) {
          if (!(oneCmdCase_ == 1)) {
            oneCmd_ = BasicCmd.getDefaultInstance();
          }
          basicCmdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  BasicCmd, BasicCmd.Builder, BasicCmdOrBuilder>(
                  (BasicCmd) oneCmd_,
                  getParentForChildren(),
                  isClean());
          oneCmd_ = null;
        }
        oneCmdCase_ = 1;
        onChanged();
        ;
        return basicCmdBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              RemoteCopyRequest, RemoteCopyRequest.Builder, RemoteCopyRequestOrBuilder> remoteCopyRequestBuilder_;

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       *
       * @return Whether the remoteCopyRequest field is set.
       */
      @Override
      public boolean hasRemoteCopyRequest() {
        return oneCmdCase_ == 2;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       *
       * @return The remoteCopyRequest.
       */
      @Override
      public RemoteCopyRequest getRemoteCopyRequest() {
        if (remoteCopyRequestBuilder_ == null) {
          if (oneCmdCase_ == 2) {
            return (RemoteCopyRequest) oneCmd_;
          }
          return RemoteCopyRequest.getDefaultInstance();
        } else {
          if (oneCmdCase_ == 2) {
            return remoteCopyRequestBuilder_.getMessage();
          }
          return RemoteCopyRequest.getDefaultInstance();
        }
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       */
      public Builder setRemoteCopyRequest(RemoteCopyRequest value) {
        if (remoteCopyRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneCmd_ = value;
          onChanged();
        } else {
          remoteCopyRequestBuilder_.setMessage(value);
        }
        oneCmdCase_ = 2;
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       */
      public Builder setRemoteCopyRequest(
              RemoteCopyRequest.Builder builderForValue) {
        if (remoteCopyRequestBuilder_ == null) {
          oneCmd_ = builderForValue.build();
          onChanged();
        } else {
          remoteCopyRequestBuilder_.setMessage(builderForValue.build());
        }
        oneCmdCase_ = 2;
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       */
      public Builder mergeRemoteCopyRequest(RemoteCopyRequest value) {
        if (remoteCopyRequestBuilder_ == null) {
          if (oneCmdCase_ == 2 &&
                  oneCmd_ != RemoteCopyRequest.getDefaultInstance()) {
            oneCmd_ = RemoteCopyRequest.newBuilder((RemoteCopyRequest) oneCmd_)
                    .mergeFrom(value).buildPartial();
          } else {
            oneCmd_ = value;
          }
          onChanged();
        } else {
          if (oneCmdCase_ == 2) {
            remoteCopyRequestBuilder_.mergeFrom(value);
          }
          remoteCopyRequestBuilder_.setMessage(value);
        }
        oneCmdCase_ = 2;
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       */
      public Builder clearRemoteCopyRequest() {
        if (remoteCopyRequestBuilder_ == null) {
          if (oneCmdCase_ == 2) {
            oneCmdCase_ = 0;
            oneCmd_ = null;
            onChanged();
          }
        } else {
          if (oneCmdCase_ == 2) {
            oneCmdCase_ = 0;
            oneCmd_ = null;
          }
          remoteCopyRequestBuilder_.clear();
        }
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       */
      public RemoteCopyRequest.Builder getRemoteCopyRequestBuilder() {
        return getRemoteCopyRequestFieldBuilder().getBuilder();
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       */
      @Override
      public RemoteCopyRequestOrBuilder getRemoteCopyRequestOrBuilder() {
        if ((oneCmdCase_ == 2) && (remoteCopyRequestBuilder_ != null)) {
          return remoteCopyRequestBuilder_.getMessageOrBuilder();
        } else {
          if (oneCmdCase_ == 2) {
            return (RemoteCopyRequest) oneCmd_;
          }
          return RemoteCopyRequest.getDefaultInstance();
        }
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest remoteCopyRequest = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              RemoteCopyRequest, RemoteCopyRequest.Builder, RemoteCopyRequestOrBuilder>
      getRemoteCopyRequestFieldBuilder() {
        if (remoteCopyRequestBuilder_ == null) {
          if (!(oneCmdCase_ == 2)) {
            oneCmd_ = RemoteCopyRequest.getDefaultInstance();
          }
          remoteCopyRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  RemoteCopyRequest, RemoteCopyRequest.Builder, RemoteCopyRequestOrBuilder>(
                  (RemoteCopyRequest) oneCmd_,
                  getParentForChildren(),
                  isClean());
          oneCmd_ = null;
        }
        oneCmdCase_ = 2;
        onChanged();
        ;
        return remoteCopyRequestBuilder_;
      }

      @Override
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ido.robin.rpc.Cmd)
    }

    // @@protoc_insertion_point(class_scope:com.ido.robin.rpc.Cmd)
    private static final Cmd DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new Cmd();
    }

    public static Cmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Cmd>
            PARSER = new com.google.protobuf.AbstractParser<Cmd>() {
      @Override
      public Cmd parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new Cmd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Cmd> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Cmd> getParserForType() {
      return PARSER;
    }

    @Override
    public Cmd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BasicCmdOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.ido.robin.rpc.BasicCmd)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
     * @return The type.
     */
    BasicCmd.CmdType getType();

    /**
     * <code>string key = 2;</code>
     *
     * @return The key.
     */
    String getKey();

    /**
     * <code>string key = 2;</code>
     *
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
    getKeyBytes();

    /**
     * <code>string value = 3;</code>
     *
     * @return The value.
     */
    String getValue();

    /**
     * <code>string value = 3;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
    getValueBytes();

    /**
     * <code>int32 id = 4;</code>
     *
     * @return The id.
     */
    int getId();

    /**
     * <code>bytes data = 5;</code>
     *
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>string fileName = 6;</code>
     *
     * @return The fileName.
     */
    String getFileName();

    /**
     * <code>string fileName = 6;</code>
     *
     * @return The bytes for fileName.
     */
    com.google.protobuf.ByteString
    getFileNameBytes();
  }

  /**
   * Protobuf type {@code com.ido.robin.rpc.BasicCmd}
   */
  public static final class BasicCmd extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.ido.robin.rpc.BasicCmd)
          BasicCmdOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use BasicCmd.newBuilder() to construct.
    private BasicCmd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private BasicCmd() {
      type_ = 0;
      key_ = "";
      value_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      fileName_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
            UnusedPrivateParameter unused) {
      return new BasicCmd();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }

    private BasicCmd(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            case 32: {

              id_ = input.readInt32();
              break;
            }
            case 42: {

              data_ = input.readBytes();
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              fileName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return RemoteCmd.internal_static_com_ido_robin_rpc_BasicCmd_descriptor;
    }

    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return RemoteCmd.internal_static_com_ido_robin_rpc_BasicCmd_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      BasicCmd.class, Builder.class);
    }

    /**
     * Protobuf enum {@code com.ido.robin.rpc.BasicCmd.CmdType}
     */
    public enum CmdType
            implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PUT = 0;</code>
       */
      PUT(0),
      /**
       * <code>GET = 1;</code>
       */
      GET(1),
      /**
       * <code>DELETE = 2;</code>
       */
      DELETE(2),
      /**
       * <code>COPY = 3;</code>
       */
      COPY(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PUT = 0;</code>
       */
      public static final int PUT_VALUE = 0;
      /**
       * <code>GET = 1;</code>
       */
      public static final int GET_VALUE = 1;
      /**
       * <code>DELETE = 2;</code>
       */
      public static final int DELETE_VALUE = 2;
      /**
       * <code>COPY = 3;</code>
       */
      public static final int COPY_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static CmdType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static CmdType forNumber(int value) {
        switch (value) {
          case 0:
            return PUT;
          case 1:
            return GET;
          case 2:
            return DELETE;
          case 3:
            return COPY;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CmdType>
      internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<
              CmdType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<CmdType>() {
                public CmdType findValueByNumber(int number) {
                  return CmdType.forNumber(number);
                }
              };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new IllegalStateException(
                  "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
        return BasicCmd.getDescriptor().getEnumTypes().get(0);
      }

      private static final CmdType[] VALUES = values();

      public static CmdType valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
                  "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private CmdType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.ido.robin.rpc.BasicCmd.CmdType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;

    /**
     * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
     *
     * @return The enum numeric value on the wire for type.
     */
    @Override
    public int getTypeValue() {
      return type_;
    }

    /**
     * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
     *
     * @return The type.
     */
    @Override
    public CmdType getType() {
      @SuppressWarnings("deprecation")
      CmdType result = CmdType.valueOf(type_);
      return result == null ? CmdType.UNRECOGNIZED : result;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private volatile Object key_;

    /**
     * <code>string key = 2;</code>
     *
     * @return The key.
     */
    @Override
    public String getKey() {
      Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }

    /**
     * <code>string key = 2;</code>
     *
     * @return The bytes for key.
     */
    @Override
    public com.google.protobuf.ByteString
    getKeyBytes() {
      Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private volatile Object value_;

    /**
     * <code>string value = 3;</code>
     *
     * @return The value.
     */
    @Override
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }

    /**
     * <code>string value = 3;</code>
     *
     * @return The bytes for value.
     */
    @Override
    public com.google.protobuf.ByteString
    getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 4;
    private int id_;

    /**
     * <code>int32 id = 4;</code>
     *
     * @return The id.
     */
    @Override
    public int getId() {
      return id_;
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString data_;

    /**
     * <code>bytes data = 5;</code>
     *
     * @return The data.
     */
    @Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int FILENAME_FIELD_NUMBER = 6;
    private volatile Object fileName_;

    /**
     * <code>string fileName = 6;</code>
     *
     * @return The fileName.
     */
    @Override
    public String getFileName() {
      Object ref = fileName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      }
    }

    /**
     * <code>string fileName = 6;</code>
     *
     * @return The bytes for fileName.
     */
    @Override
    public com.google.protobuf.ByteString
    getFileNameBytes() {
      Object ref = fileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (type_ != CmdType.PUT.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);
      }
      if (id_ != 0) {
        output.writeInt32(4, id_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(5, data_);
      }
      if (!getFileNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, fileName_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != CmdType.PUT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, type_);
      }
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(4, id_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(5, data_);
      }
      if (!getFileNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, fileName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof BasicCmd)) {
        return super.equals(obj);
      }
      BasicCmd other = (BasicCmd) obj;

      if (type_ != other.type_) return false;
      if (!getKey()
              .equals(other.getKey())) return false;
      if (!getValue()
              .equals(other.getValue())) return false;
      if (getId()
              != other.getId()) return false;
      if (!getData()
              .equals(other.getData())) return false;
      if (!getFileName()
              .equals(other.getFileName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFileName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BasicCmd parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static BasicCmd parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static BasicCmd parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static BasicCmd parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static BasicCmd parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static BasicCmd parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static BasicCmd parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static BasicCmd parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static BasicCmd parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static BasicCmd parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static BasicCmd parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static BasicCmd parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(BasicCmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code com.ido.robin.rpc.BasicCmd}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.ido.robin.rpc.BasicCmd)
            BasicCmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_BasicCmd_descriptor;
      }

      @Override
      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_BasicCmd_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        BasicCmd.class, Builder.class);
      }

      // Construct using com.ido.robin.rpc.proto.RemoteCmd.BasicCmd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      @Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        key_ = "";

        value_ = "";

        id_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        fileName_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_BasicCmd_descriptor;
      }

      @Override
      public BasicCmd getDefaultInstanceForType() {
        return BasicCmd.getDefaultInstance();
      }

      @Override
      public BasicCmd build() {
        BasicCmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public BasicCmd buildPartial() {
        BasicCmd result = new BasicCmd(this);
        result.type_ = type_;
        result.key_ = key_;
        result.value_ = value_;
        result.id_ = id_;
        result.data_ = data_;
        result.fileName_ = fileName_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }

      @Override
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return super.setField(field, value);
      }

      @Override
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @Override
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @Override
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @Override
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return super.addRepeatedField(field, value);
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BasicCmd) {
          return mergeFrom((BasicCmd) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BasicCmd other) {
        if (other == BasicCmd.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getFileName().isEmpty()) {
          fileName_ = other.fileName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        BasicCmd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BasicCmd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;

      /**
       * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
       *
       * @return The enum numeric value on the wire for type.
       */
      @Override
      public int getTypeValue() {
        return type_;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
       *
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {

        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
       *
       * @return The type.
       */
      @Override
      public CmdType getType() {
        @SuppressWarnings("deprecation")
        CmdType result = CmdType.valueOf(type_);
        return result == null ? CmdType.UNRECOGNIZED : result;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
       *
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(CmdType value) {
        if (value == null) {
          throw new NullPointerException();
        }

        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.BasicCmd.CmdType type = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearType() {

        type_ = 0;
        onChanged();
        return this;
      }

      private Object key_ = "";

      /**
       * <code>string key = 2;</code>
       *
       * @return The key.
       */
      public String getKey() {
        Object ref = key_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>string key = 2;</code>
       *
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
      getKeyBytes() {
        Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>string key = 2;</code>
       *
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
              String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        key_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>string key = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearKey() {

        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }

      /**
       * <code>string key = 2;</code>
       *
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        key_ = value;
        onChanged();
        return this;
      }

      private Object value_ = "";

      /**
       * <code>string value = 3;</code>
       *
       * @return The value.
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>string value = 3;</code>
       *
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
      getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>string value = 3;</code>
       *
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
              String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        value_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>string value = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearValue() {

        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      /**
       * <code>string value = 3;</code>
       *
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        value_ = value;
        onChanged();
        return this;
      }

      private int id_;

      /**
       * <code>int32 id = 4;</code>
       *
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }

      /**
       * <code>int32 id = 4;</code>
       *
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int32 id = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearId() {

        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;

      /**
       * <code>bytes data = 5;</code>
       *
       * @return The data.
       */
      @Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }

      /**
       * <code>bytes data = 5;</code>
       *
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }

        data_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>bytes data = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearData() {

        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private Object fileName_ = "";

      /**
       * <code>string fileName = 6;</code>
       *
       * @return The fileName.
       */
      public String getFileName() {
        Object ref = fileName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>string fileName = 6;</code>
       *
       * @return The bytes for fileName.
       */
      public com.google.protobuf.ByteString
      getFileNameBytes() {
        Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>string fileName = 6;</code>
       *
       * @param value The fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileName(
              String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        fileName_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>string fileName = 6;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearFileName() {

        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }

      /**
       * <code>string fileName = 6;</code>
       *
       * @param value The bytes for fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileNameBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        fileName_ = value;
        onChanged();
        return this;
      }

      @Override
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ido.robin.rpc.BasicCmd)
    }

    // @@protoc_insertion_point(class_scope:com.ido.robin.rpc.BasicCmd)
    private static final BasicCmd DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new BasicCmd();
    }

    public static BasicCmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BasicCmd>
            PARSER = new com.google.protobuf.AbstractParser<BasicCmd>() {
      @Override
      public BasicCmd parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new BasicCmd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BasicCmd> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BasicCmd> getParserForType() {
      return PARSER;
    }

    @Override
    public BasicCmd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteCopyRequestOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.ido.robin.rpc.RemoteCopyRequest)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 sourcePort = 1;</code>
     *
     * @return The sourcePort.
     */
    int getSourcePort();

    /**
     * <code>int32 targetPort = 2;</code>
     *
     * @return The targetPort.
     */
    int getTargetPort();

    /**
     * <code>string sourceHost = 3;</code>
     *
     * @return The sourceHost.
     */
    String getSourceHost();

    /**
     * <code>string sourceHost = 3;</code>
     *
     * @return The bytes for sourceHost.
     */
    com.google.protobuf.ByteString
    getSourceHostBytes();

    /**
     * <code>string targetHost = 4;</code>
     *
     * @return The targetHost.
     */
    String getTargetHost();

    /**
     * <code>string targetHost = 4;</code>
     *
     * @return The bytes for targetHost.
     */
    com.google.protobuf.ByteString
    getTargetHostBytes();

    /**
     * <code>int32 hashRangeStart = 5;</code>
     *
     * @return The hashRangeStart.
     */
    int getHashRangeStart();

    /**
     * <code>int32 hashRangeEnd = 6;</code>
     *
     * @return The hashRangeEnd.
     */
    int getHashRangeEnd();

    /**
     * <code>int32 id = 7;</code>
     *
     * @return The id.
     */
    int getId();

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
     *
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
     *
     * @return The type.
     */
    RemoteCopyRequest.CopyType getType();
  }

  /**
   * Protobuf type {@code com.ido.robin.rpc.RemoteCopyRequest}
   */
  public static final class RemoteCopyRequest extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.ido.robin.rpc.RemoteCopyRequest)
          RemoteCopyRequestOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use RemoteCopyRequest.newBuilder() to construct.
    private RemoteCopyRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private RemoteCopyRequest() {
      sourceHost_ = "";
      targetHost_ = "";
      type_ = 0;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
            UnusedPrivateParameter unused) {
      return new RemoteCopyRequest();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }

    private RemoteCopyRequest(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              sourcePort_ = input.readInt32();
              break;
            }
            case 16: {

              targetPort_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              sourceHost_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              targetHost_ = s;
              break;
            }
            case 40: {

              hashRangeStart_ = input.readInt32();
              break;
            }
            case 48: {

              hashRangeEnd_ = input.readInt32();
              break;
            }
            case 56: {

              id_ = input.readInt32();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return RemoteCmd.internal_static_com_ido_robin_rpc_RemoteCopyRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return RemoteCmd.internal_static_com_ido_robin_rpc_RemoteCopyRequest_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      RemoteCopyRequest.class, Builder.class);
    }

    /**
     * Protobuf enum {@code com.ido.robin.rpc.RemoteCopyRequest.CopyType}
     */
    public enum CopyType
            implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ADD = 0;</code>
       */
      ADD(0),
      /**
       * <code>REMOVE = 1;</code>
       */
      REMOVE(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ADD = 0;</code>
       */
      public static final int ADD_VALUE = 0;
      /**
       * <code>REMOVE = 1;</code>
       */
      public static final int REMOVE_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static CopyType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static CopyType forNumber(int value) {
        switch (value) {
          case 0:
            return ADD;
          case 1:
            return REMOVE;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CopyType>
      internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<
              CopyType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<CopyType>() {
                public CopyType findValueByNumber(int number) {
                  return CopyType.forNumber(number);
                }
              };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new IllegalStateException(
                  "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
        return RemoteCopyRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final CopyType[] VALUES = values();

      public static CopyType valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
                  "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private CopyType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.ido.robin.rpc.RemoteCopyRequest.CopyType)
    }

    public static final int SOURCEPORT_FIELD_NUMBER = 1;
    private int sourcePort_;

    /**
     * <code>int32 sourcePort = 1;</code>
     *
     * @return The sourcePort.
     */
    @Override
    public int getSourcePort() {
      return sourcePort_;
    }

    public static final int TARGETPORT_FIELD_NUMBER = 2;
    private int targetPort_;

    /**
     * <code>int32 targetPort = 2;</code>
     *
     * @return The targetPort.
     */
    @Override
    public int getTargetPort() {
      return targetPort_;
    }

    public static final int SOURCEHOST_FIELD_NUMBER = 3;
    private volatile Object sourceHost_;

    /**
     * <code>string sourceHost = 3;</code>
     *
     * @return The sourceHost.
     */
    @Override
    public String getSourceHost() {
      Object ref = sourceHost_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sourceHost_ = s;
        return s;
      }
    }

    /**
     * <code>string sourceHost = 3;</code>
     *
     * @return The bytes for sourceHost.
     */
    @Override
    public com.google.protobuf.ByteString
    getSourceHostBytes() {
      Object ref = sourceHost_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (String) ref);
        sourceHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGETHOST_FIELD_NUMBER = 4;
    private volatile Object targetHost_;

    /**
     * <code>string targetHost = 4;</code>
     *
     * @return The targetHost.
     */
    @Override
    public String getTargetHost() {
      Object ref = targetHost_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        targetHost_ = s;
        return s;
      }
    }

    /**
     * <code>string targetHost = 4;</code>
     *
     * @return The bytes for targetHost.
     */
    @Override
    public com.google.protobuf.ByteString
    getTargetHostBytes() {
      Object ref = targetHost_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (String) ref);
        targetHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HASHRANGESTART_FIELD_NUMBER = 5;
    private int hashRangeStart_;

    /**
     * <code>int32 hashRangeStart = 5;</code>
     *
     * @return The hashRangeStart.
     */
    @Override
    public int getHashRangeStart() {
      return hashRangeStart_;
    }

    public static final int HASHRANGEEND_FIELD_NUMBER = 6;
    private int hashRangeEnd_;

    /**
     * <code>int32 hashRangeEnd = 6;</code>
     *
     * @return The hashRangeEnd.
     */
    @Override
    public int getHashRangeEnd() {
      return hashRangeEnd_;
    }

    public static final int ID_FIELD_NUMBER = 7;
    private int id_;

    /**
     * <code>int32 id = 7;</code>
     *
     * @return The id.
     */
    @Override
    public int getId() {
      return id_;
    }

    public static final int TYPE_FIELD_NUMBER = 8;
    private int type_;

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
     *
     * @return The enum numeric value on the wire for type.
     */
    @Override
    public int getTypeValue() {
      return type_;
    }

    /**
     * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
     *
     * @return The type.
     */
    @Override
    public CopyType getType() {
      @SuppressWarnings("deprecation")
      CopyType result = CopyType.valueOf(type_);
      return result == null ? CopyType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;

    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (sourcePort_ != 0) {
        output.writeInt32(1, sourcePort_);
      }
      if (targetPort_ != 0) {
        output.writeInt32(2, targetPort_);
      }
      if (!getSourceHostBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sourceHost_);
      }
      if (!getTargetHostBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, targetHost_);
      }
      if (hashRangeStart_ != 0) {
        output.writeInt32(5, hashRangeStart_);
      }
      if (hashRangeEnd_ != 0) {
        output.writeInt32(6, hashRangeEnd_);
      }
      if (id_ != 0) {
        output.writeInt32(7, id_);
      }
      if (type_ != CopyType.ADD.getNumber()) {
        output.writeEnum(8, type_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sourcePort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, sourcePort_);
      }
      if (targetPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, targetPort_);
      }
      if (!getSourceHostBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sourceHost_);
      }
      if (!getTargetHostBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, targetHost_);
      }
      if (hashRangeStart_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, hashRangeStart_);
      }
      if (hashRangeEnd_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(6, hashRangeEnd_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(7, id_);
      }
      if (type_ != CopyType.ADD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(8, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof RemoteCopyRequest)) {
        return super.equals(obj);
      }
      RemoteCopyRequest other = (RemoteCopyRequest) obj;

      if (getSourcePort()
              != other.getSourcePort()) return false;
      if (getTargetPort()
              != other.getTargetPort()) return false;
      if (!getSourceHost()
              .equals(other.getSourceHost())) return false;
      if (!getTargetHost()
              .equals(other.getTargetHost())) return false;
      if (getHashRangeStart()
              != other.getHashRangeStart()) return false;
      if (getHashRangeEnd()
              != other.getHashRangeEnd()) return false;
      if (getId()
              != other.getId()) return false;
      if (type_ != other.type_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SOURCEPORT_FIELD_NUMBER;
      hash = (53 * hash) + getSourcePort();
      hash = (37 * hash) + TARGETPORT_FIELD_NUMBER;
      hash = (53 * hash) + getTargetPort();
      hash = (37 * hash) + SOURCEHOST_FIELD_NUMBER;
      hash = (53 * hash) + getSourceHost().hashCode();
      hash = (37 * hash) + TARGETHOST_FIELD_NUMBER;
      hash = (53 * hash) + getTargetHost().hashCode();
      hash = (37 * hash) + HASHRANGESTART_FIELD_NUMBER;
      hash = (53 * hash) + getHashRangeStart();
      hash = (37 * hash) + HASHRANGEEND_FIELD_NUMBER;
      hash = (53 * hash) + getHashRangeEnd();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteCopyRequest parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static RemoteCopyRequest parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static RemoteCopyRequest parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static RemoteCopyRequest parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static RemoteCopyRequest parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static RemoteCopyRequest parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static RemoteCopyRequest parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static RemoteCopyRequest parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static RemoteCopyRequest parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static RemoteCopyRequest parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static RemoteCopyRequest parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static RemoteCopyRequest parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(RemoteCopyRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     * Protobuf type {@code com.ido.robin.rpc.RemoteCopyRequest}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.ido.robin.rpc.RemoteCopyRequest)
            RemoteCopyRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_RemoteCopyRequest_descriptor;
      }

      @Override
      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_RemoteCopyRequest_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        RemoteCopyRequest.class, Builder.class);
      }

      // Construct using com.ido.robin.rpc.proto.RemoteCmd.RemoteCopyRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      @Override
      public Builder clear() {
        super.clear();
        sourcePort_ = 0;

        targetPort_ = 0;

        sourceHost_ = "";

        targetHost_ = "";

        hashRangeStart_ = 0;

        hashRangeEnd_ = 0;

        id_ = 0;

        type_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return RemoteCmd.internal_static_com_ido_robin_rpc_RemoteCopyRequest_descriptor;
      }

      @Override
      public RemoteCopyRequest getDefaultInstanceForType() {
        return RemoteCopyRequest.getDefaultInstance();
      }

      @Override
      public RemoteCopyRequest build() {
        RemoteCopyRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RemoteCopyRequest buildPartial() {
        RemoteCopyRequest result = new RemoteCopyRequest(this);
        result.sourcePort_ = sourcePort_;
        result.targetPort_ = targetPort_;
        result.sourceHost_ = sourceHost_;
        result.targetHost_ = targetHost_;
        result.hashRangeStart_ = hashRangeStart_;
        result.hashRangeEnd_ = hashRangeEnd_;
        result.id_ = id_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }

      @Override
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return super.setField(field, value);
      }

      @Override
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @Override
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @Override
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @Override
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return super.addRepeatedField(field, value);
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteCopyRequest) {
          return mergeFrom((RemoteCopyRequest) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteCopyRequest other) {
        if (other == RemoteCopyRequest.getDefaultInstance()) return this;
        if (other.getSourcePort() != 0) {
          setSourcePort(other.getSourcePort());
        }
        if (other.getTargetPort() != 0) {
          setTargetPort(other.getTargetPort());
        }
        if (!other.getSourceHost().isEmpty()) {
          sourceHost_ = other.sourceHost_;
          onChanged();
        }
        if (!other.getTargetHost().isEmpty()) {
          targetHost_ = other.targetHost_;
          onChanged();
        }
        if (other.getHashRangeStart() != 0) {
          setHashRangeStart(other.getHashRangeStart());
        }
        if (other.getHashRangeEnd() != 0) {
          setHashRangeEnd(other.getHashRangeEnd());
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        RemoteCopyRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteCopyRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int sourcePort_;

      /**
       * <code>int32 sourcePort = 1;</code>
       * @return The sourcePort.
       */
      @Override
      public int getSourcePort() {
        return sourcePort_;
      }

      /**
       * <code>int32 sourcePort = 1;</code>
       * @param value The sourcePort to set.
       * @return This builder for chaining.
       */
      public Builder setSourcePort(int value) {

        sourcePort_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int32 sourcePort = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourcePort() {

        sourcePort_ = 0;
        onChanged();
        return this;
      }

      private int targetPort_;

      /**
       * <code>int32 targetPort = 2;</code>
       * @return The targetPort.
       */
      @Override
      public int getTargetPort() {
        return targetPort_;
      }

      /**
       * <code>int32 targetPort = 2;</code>
       * @param value The targetPort to set.
       * @return This builder for chaining.
       */
      public Builder setTargetPort(int value) {

        targetPort_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int32 targetPort = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetPort() {

        targetPort_ = 0;
        onChanged();
        return this;
      }

      private Object sourceHost_ = "";

      /**
       * <code>string sourceHost = 3;</code>
       * @return The sourceHost.
       */
      public String getSourceHost() {
        Object ref = sourceHost_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sourceHost_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>string sourceHost = 3;</code>
       * @return The bytes for sourceHost.
       */
      public com.google.protobuf.ByteString
      getSourceHostBytes() {
        Object ref = sourceHost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (String) ref);
          sourceHost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>string sourceHost = 3;</code>
       * @param value The sourceHost to set.
       * @return This builder for chaining.
       */
      public Builder setSourceHost(
              String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        sourceHost_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>string sourceHost = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceHost() {

        sourceHost_ = getDefaultInstance().getSourceHost();
        onChanged();
        return this;
      }

      /**
       * <code>string sourceHost = 3;</code>
       * @param value The bytes for sourceHost to set.
       * @return This builder for chaining.
       */
      public Builder setSourceHostBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        sourceHost_ = value;
        onChanged();
        return this;
      }

      private Object targetHost_ = "";

      /**
       * <code>string targetHost = 4;</code>
       * @return The targetHost.
       */
      public String getTargetHost() {
        Object ref = targetHost_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          targetHost_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <code>string targetHost = 4;</code>
       * @return The bytes for targetHost.
       */
      public com.google.protobuf.ByteString
      getTargetHostBytes() {
        Object ref = targetHost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (String) ref);
          targetHost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>string targetHost = 4;</code>
       * @param value The targetHost to set.
       * @return This builder for chaining.
       */
      public Builder setTargetHost(
              String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        targetHost_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>string targetHost = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetHost() {

        targetHost_ = getDefaultInstance().getTargetHost();
        onChanged();
        return this;
      }

      /**
       * <code>string targetHost = 4;</code>
       * @param value The bytes for targetHost to set.
       * @return This builder for chaining.
       */
      public Builder setTargetHostBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        targetHost_ = value;
        onChanged();
        return this;
      }

      private int hashRangeStart_;

      /**
       * <code>int32 hashRangeStart = 5;</code>
       * @return The hashRangeStart.
       */
      @Override
      public int getHashRangeStart() {
        return hashRangeStart_;
      }

      /**
       * <code>int32 hashRangeStart = 5;</code>
       * @param value The hashRangeStart to set.
       * @return This builder for chaining.
       */
      public Builder setHashRangeStart(int value) {

        hashRangeStart_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int32 hashRangeStart = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashRangeStart() {

        hashRangeStart_ = 0;
        onChanged();
        return this;
      }

      private int hashRangeEnd_;

      /**
       * <code>int32 hashRangeEnd = 6;</code>
       * @return The hashRangeEnd.
       */
      @Override
      public int getHashRangeEnd() {
        return hashRangeEnd_;
      }

      /**
       * <code>int32 hashRangeEnd = 6;</code>
       * @param value The hashRangeEnd to set.
       * @return This builder for chaining.
       */
      public Builder setHashRangeEnd(int value) {

        hashRangeEnd_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int32 hashRangeEnd = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashRangeEnd() {

        hashRangeEnd_ = 0;
        onChanged();
        return this;
      }

      private int id_;

      /**
       * <code>int32 id = 7;</code>
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }

      /**
       * <code>int32 id = 7;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int32 id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {

        id_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
       * @return The enum numeric value on the wire for type.
       */
      @Override
      public int getTypeValue() {
        return type_;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {

        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
       * @return The type.
       */
      @Override
      public CopyType getType() {
        @SuppressWarnings("deprecation")
        CopyType result = CopyType.valueOf(type_);
        return result == null ? CopyType.UNRECOGNIZED : result;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(CopyType value) {
        if (value == null) {
          throw new NullPointerException();
        }

        type_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.com.ido.robin.rpc.RemoteCopyRequest.CopyType type = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {

        type_ = 0;
        onChanged();
        return this;
      }

      @Override
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ido.robin.rpc.RemoteCopyRequest)
    }

    // @@protoc_insertion_point(class_scope:com.ido.robin.rpc.RemoteCopyRequest)
    private static final RemoteCopyRequest DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new RemoteCopyRequest();
    }

    public static RemoteCopyRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteCopyRequest>
            PARSER = new com.google.protobuf.AbstractParser<RemoteCopyRequest>() {
      @Override
      public RemoteCopyRequest parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteCopyRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteCopyRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RemoteCopyRequest> getParserForType() {
      return PARSER;
    }

    @Override
    public RemoteCopyRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_ido_robin_rpc_Cmd_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_ido_robin_rpc_Cmd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_ido_robin_rpc_BasicCmd_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_ido_robin_rpc_BasicCmd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ido_robin_rpc_RemoteCopyRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ido_robin_rpc_RemoteCopyRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017RemoteCmd.proto\022\021com.ido.robin.rpc\"\203\001\n" +
      "\003Cmd\022/\n\010basicCmd\030\001 \001(\0132\033.com.ido.robin.r" +
              "pc.BasicCmdH\000\022A\n\021remoteCopyRequest\030\002 \001(\013" +
              "2$.com.ido.robin.rpc.RemoteCopyRequestH\000" +
      "B\010\n\006oneCmd\"\270\001\n\010BasicCmd\0221\n\004type\030\001 \001(\0162#." +
      "com.ido.robin.rpc.BasicCmd.CmdType\022\013\n\003ke" +
      "y\030\002 \001(\t\022\r\n\005value\030\003 \001(\t\022\n\n\002id\030\004 \001(\005\022\014\n\004da" +
      "ta\030\005 \001(\014\022\020\n\010fileName\030\006 \001(\t\"1\n\007CmdType\022\007\n" +
      "\003PUT\020\000\022\007\n\003GET\020\001\022\n\n\006DELETE\020\002\022\010\n\004COPY\020\003\"\373\001" +
      "\n\021RemoteCopyRequest\022\022\n\nsourcePort\030\001 \001(\005\022" +
      "\022\n\ntargetPort\030\002 \001(\005\022\022\n\nsourceHost\030\003 \001(\t\022" +
      "\022\n\ntargetHost\030\004 \001(\t\022\026\n\016hashRangeStart\030\005 " +
      "\001(\005\022\024\n\014hashRangeEnd\030\006 \001(\005\022\n\n\002id\030\007 \001(\005\022;\n" +
      "\004type\030\010 \001(\0162-.com.ido.robin.rpc.RemoteCo" +
      "pyRequest.CopyType\"\037\n\010CopyType\022\007\n\003ADD\020\000\022" +
      "\n\n\006REMOVE\020\001B$\n\027com.ido.robin.rpc.protoB\t" +
      "RemoteCmdb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_ido_robin_rpc_Cmd_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_ido_robin_rpc_Cmd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ido_robin_rpc_Cmd_descriptor,
        new String[] { "BasicCmd", "RemoteCopyRequest", "OneCmd", });
    internal_static_com_ido_robin_rpc_BasicCmd_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_ido_robin_rpc_BasicCmd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ido_robin_rpc_BasicCmd_descriptor,
        new String[] { "Type", "Key", "Value", "Id", "Data", "FileName", });
    internal_static_com_ido_robin_rpc_RemoteCopyRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_ido_robin_rpc_RemoteCopyRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ido_robin_rpc_RemoteCopyRequest_descriptor,
        new String[] { "SourcePort", "TargetPort", "SourceHost", "TargetHost", "HashRangeStart", "HashRangeEnd", "Id", "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
